version: '3.8'

networks:
  backend:
    driver: ${NETWORKS_DRIVER}
services:
  fid_backup:
    build:
      context: ./docker/fid_backup
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    container_name: fid_backup
    user: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./docker/fid_backup/pgbackrest/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf
      - ./docker/db_dump:/docker-entrypoint-initdb.d
      - ./volume/data/fid:/var/lib/postgresql/data
      - ./volume/data/pgbackrest:/var/lib/pgbackrest
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend
  postgres1:
    image: stephaneklein/postgres-with-walg:12.2-alpine-walg0.2.15
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      AWS_ACCESS_KEY_ID: "admin"
      AWS_SECRET_ACCESS_KEY: "password"
      WALE_S3_PREFIX: "s3://walg/backup"
      AWS_ENDPOINT: "http://s3:9000"
      AWS_S3_FORCE_PATH_STYLE: "true"
      AWS_REGION: us-east-1
      WALG_COMPRESSION_METHOD: brotli
      ARCHIVE_MODE: 'on'
      ARCHIVE_TIMEOUT: 60
      #WALG_PGP_KEY_PATH: /keys/wal-g-test-1.pub
    ports:
      - "5432:5432"
    volumes:
      - ./docker/db_dump:/docker-entrypoint-initdb.d
      - ./volumes/data/postgres:/var/lib/postgresql/data
      - ./volumes/data/keys:/keys

  postgres2:
    build: ./docker-image/postgres-with-wal-g/
    image: stephaneklein/postgres-with-walg:12.2-alpine-walg0.2.15
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      AWS_ACCESS_KEY_ID: "admin"
      AWS_SECRET_ACCESS_KEY: "password"
      WALE_S3_PREFIX: "s3://walg/backup"
      AWS_ENDPOINT: "http://s3:9000"
      AWS_S3_FORCE_PATH_STYLE: "true"
      AWS_REGION: us-east-1
      WALG_COMPRESSION_METHOD: brotli
      ARCHIVE_MODE: 'off'
      #WALG_PGP_KEY_PATH: /keys/wal-g-test-1.private
    volumes:
      - ./volumes/data/postgres2:/var/lib/postgresql/data
      - ./volumes/data/keys:/keys
  s3:
    image: minio/minio:RELEASE.2020-03-25T07-03-04Z
    environment:
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password
    ports:
      - "9000:9000"
    volumes:
      - ./volumes/data/minio:/data
    entrypoint: sh
    command: >
      -c 'mkdir -p /data/walg
      && /usr/bin/minio server /data'